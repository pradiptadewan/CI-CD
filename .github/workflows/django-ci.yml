name: Django CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          echo "Creating basic requirements.txt"
          echo "Django>=3.2.0,<5.0.0" > requirements.txt
          pip install -r requirements.txt
        fi

    - name: Find Django project name
      id: project_name
      run: |
        # Simple approach to find settings.py
        SETTINGS_FILES=$(find . -type f -name "settings.py" | grep -v "venv" | head -n 1)
        if [ -z "$SETTINGS_FILES" ]; then
          echo "Warning: Could not find settings.py"
          echo "project_name=django_project" >> $GITHUB_OUTPUT
        else
          PROJECT_DIR=$(dirname "$SETTINGS_FILES")
          PROJECT_NAME=$(basename "$PROJECT_DIR")
          echo "Found project: $PROJECT_NAME"
          echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT
        fi

    - name: Verify Django installation
      run: |
        python -c "import django; print('Django version:', django.get_version())"

    - name: Run Django checks
      run: |
        if [ -f manage.py ]; then
          python manage.py check
        else
          echo "Error: manage.py not found"
          exit 1
        fi

    - name: Test Django server
      run: |
        if [ -f manage.py ]; then
          echo "Testing Django server config"
          PROJECT_NAME=${{ steps.project_name.outputs.project_name }}
          echo "Using project name: $PROJECT_NAME"
          python -c "import os; os.environ['DJANGO_SETTINGS_MODULE'] = '$PROJECT_NAME.settings'; import django; django.setup(); print('Django configured successfully')"
        fi